{"version":3,"sources":["components/Header.js","components/Contact.js","components/Footer.js","components/ProjectTile.js","App.js","serviceWorker.js","index.js"],"names":["Header","id","className","href","Contact","props","link","target","isLink","rel","src","imageLocation","alt","imageDescription","Footer","type","ProjectTile","title","App","state","margin","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9c07a58f.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\nfunction Header() {\n  return(\n    <nav id=\"navbar\">\n      <ul>\n        <li><a className=\"navlink\" href=\"#contact\">Resume</a></li>\n        <li><a className=\"navlink\" href=\"#projects\">Portfolio</a></li>\n        <li><a className=\"navlink\" href=\"#welcome-section\">Home</a></li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport '../App.css';\nimport '../style/Contact.css';\n\n\nfunction Contact(props) {\n  return(\n\n    <div className=\"contact-tile\">\n      <a href={props.link}\n         target={ props.isLink ? \"_blank\" : \"_top\"}\n         rel={props.rel ? \"noopener noreferrer\" : \"\"}>\n        <img src={props.imageLocation}\n             alt={props.imageDescription} />\n      </a>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React from 'react';\nimport '../App.css';\nimport '../style/Footer.css';\nimport Contact from './Contact.js';\n\nfunction Footer() {\n  return(\n    <footer id=\"footer\">\n\n    <div id=\"footer-left\">\n      <p className=\"footer-list\">Programmed and Designed by Anne Thorsteinson</p>\n      <p><span>Copyright 2020</span></p>\n    </div>\n      <ul id=\"footer-grid\">\n        <Contact type=\"email-link\"\n                 link=\"mailto: anne.thor@gmail.com?Subject=Let's Connect\"\n                 isLink={false}\n                 rel={false}\n                 imageLocation=\"./images/contacts/email.png\"\n                 imageDescription=\"email logo\" />\n        <Contact type=\"linkedin\"\n                 link=\"https://www.linkedin.com/in/annethor/\"\n                 isLink={true}\n                 rel={true}\n                 imageLocation=\"./images/contacts/LI-In-Bug.png\"\n                 imageDescription=\"linkedin-logo\"/>\n\n        <Contact type=\"twitter-link\"\n                 link=\"https://twitter.com/thor_anne\"\n                 isLink={true}\n                 rel={true}\n                 imageLocation=\"./images/contacts/twitter.png\"\n                 imageDescription=\"twitter logo\" />\n        <Contact type=\"profile=link\"\n                 link=\"https://github.com/annethor\"\n                 isLink={true}\n                 rel={true}\n                 imageLocation=\"./images/contacts/github.png\"\n                 imageDescription=\"github-logo\"/>\n        <Contact type=\"fcc-link\"\n                 link=\"https://www.freecodecamp.org/annethor\"\n                 isLink={true}\n                 rel={true}\n                 imageLocation=\"./images/contacts/fcc.png\"\n                 imageDescription=\"fcc-logo\"/>\n      </ul>\n\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React from 'react';\nimport '../App.css';\nimport '../style/ProjectTile.css';\n\nfunction ProjectTile(props) {\n  return(\n    <div className=\"project-tile\">\n      <a href={props.link}\n         target=\"_blank\"\n         rel=\"noopener noreferrer\">\n      <img src={props.imageLocation}\n           alt={props.imageDescription}/>\n        {props.title}</a>\n    </div>\n  );\n}\n\nexport default ProjectTile;\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header.js';\nimport Footer from './components/Footer.js';\nimport ProjectTile from './components/ProjectTile.js';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n\n          <section id=\"welcome-section\">\n            <h1>Anne Thorsteinson</h1>\n            <p>Full Stack Web Developer | Project Manager | Travel Expert</p>\n          </section>\n\n          <div margin=\"auto\"></div>\n\n          <section id=\"projects\">\n            <div className=\"spacer\"> </div>\n            <h2>Web Development Projects</h2>\n            <div className=\"projects-grid\">\n              <ProjectTile link=\"https://annethor.github.io/javascript-calculator/\"\n                           imageLocation=\"./images/project-tiles/javascript-calculator.png\"\n                           imageDescription=\"picture of javascript calculator\"\n                           title=\"Javascript Calculator\" />\n              <ProjectTile link=\"https://annethor.github.io/drum-machine/\"\n                           imageLocation=\"./images/project-tiles/drum-machine.png\"\n                           imageDescription=\"drum machine overview\"\n                           title=\"Drum Machine\" />\n              <ProjectTile link=\"https://annethor.github.io/markdown-previewer/\"\n                           imageLocation=\"./images/project-tiles/markdown-previewer.png\"\n                           imageDescription=\"overview of markdown input-output layout\"\n                           title=\"Markdown Previewer\" />\n              <ProjectTile link=\"https://annethor.github.io/random-simpsons-quote/\"\n                           imageLocation=\"./images/project-tiles/random-quote.png\"\n                           imageDescription=\"display of random quote with simpsons character\"\n                           title=\"Quote Generator\" />\n              <ProjectTile link=\"https://annethor.github.io/tic-tac-toe/\"\n                           imageLocation=\"./images/project-tiles/tic-tac-toe.png\"\n                           imageDescription=\"empty tic tac toe game layout\"\n                           title=\"Tic Tac Toe\" />\n              <ProjectTile link=\"https://annethor.github.io/TributePage/\"\n                           imageLocation=\"./images/project-tiles/tribute-page.png\"\n                           imageDescription=\"Cover Page of Tribute Page, photo and captions of Ray Bradbury\"\n                           title=\"Ray Bradbury Page\" />\n              <div className=\"project-tile\">\n                <a href=\"../TributePage/TributePage.html\" target=\"_blank\">\n                <img src=\"./images/ProductPage.png\" alt=\"Cover page of a product page\" />\n                  Product Page</a>\n              </div>\n              <div className=\"project-tile\">\n                <a href=\"../ProductPage/SurveyPage.html\" target=\"_blank\">\n                <img src=\"./images/SurveyPage.png\" alt=\"Cover page of a survey page\" />\n                  Survey Page</a>\n              </div>\n              <div className=\"project-tile\">\n                <a href=\"../ProductPage/TechClone.html\" target=\"_blank\">\n                <img src=\"./images/TechClone.png\" alt=\"Cover page of a technical documentation page\" />\n                  Technical Documentation</a>\n              </div>\n            </div>\n          </section>\n\n          <Footer />\n        </div>\n\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}